var e=Object.defineProperty,r=Object.defineProperties,n=Object.getOwnPropertyDescriptors,t=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,c=Object.prototype.propertyIsEnumerable,o=(r,n,t)=>n in r?e(r,n,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[n]=t,l=(e,r)=>{for(var n in r||(r={}))i.call(r,n)&&o(e,n,r[n]);if(t)for(var n of t(r))c.call(r,n)&&o(e,n,r[n]);return e};const s={id:"id",children:"children",pid:"pid"},a=e=>Object.assign({},s,e),p=(e,r={})=>{r=a(r);const{children:n}=r,t=[...e];for(let i=0;i<t.length;i++)t[i][n]&&t.splice(i+1,0,...t[i][n]);return t},h=(e,r,n={})=>{n=a(n);const t=[],i=[...e],c=new Set,{children:o}=n;for(;i.length;){const e=i[0];if(c.has(e))t.pop(),i.shift();else if(c.add(e),e[o]&&i.unshift(...e[o]),t.push(e),r(e))return t}return null},d=(e,r,n={})=>{const t=(n=a(n)).children;return function e(n){return n.map((e=>l({},e))).filter((n=>(n[t]=n[t]&&e(n[t]),r(n)||n[t]&&n[t].length)))}(e)},f=(e,r)=>e.map((e=>u(e,r))),u=(e,{children:t="children",conversion:i})=>{const c=Array.isArray(e[t])&&e[t].length>0,o=i(e)||{};return c?(s=l({},o),a={[t]:e[t].map((e=>u(e,{children:t,conversion:i})))},r(s,n(a))):l({},o);var s,a},b=(e,r,n={})=>{e.forEach((e=>{const t=r(e,n)||e;e.children&&b(e.children,r,t)}))};export{h as a,p as b,b as e,d as f,f as t};
